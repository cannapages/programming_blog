<!DOCTYPE html><!-- From HTML5 Boilerplate -->
<html class="no-js" lang="en">
	<head>
		<meta charset="utf-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<title>implement.js: typage fort et Javascript</title>
		<meta name="description" content="L&#39;injection de dépendance avec Javascript a comme conséquence de ne pouvoir assumer que les fonctionnalités offertes par l&#39;instance reçue seront celles attendues." />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="stylesheet" href="/css/normalize.css" />
		<link rel="stylesheet" href="/css/main.css" />
		<link rel="stylesheet" href="/css/fontello.css" />
		<link type="text/css" href="http://fonts.googleapis.com/css?family=Telex" rel="stylesheet" />
		<link title="RSS" href="http://localhost/rss" rel="alternate" type="application/rss&#43;xml" />
	</head>
	<body>
		
		<div class="header">
			<div class="title">
				<a href="/">Site Name</a>
				<br />
				<span class="tagline"></span>
			</div>
		</div>
		<nav>
			<div class="container">
				<div class="left">
					<a class="huge" href="008-backbone-computed-properties" title="Propriétés calculées avec Backbone">«</a>
				</div>
				<div class="middle">
					<span>implement.js: typage fort et Javascript</span>
				</div>
				<div class="right">
					<a href="006-dependency-injection" title="Expérimentations sur l&#39;injection de dépendance avec node.js" class="huge">»</a>
				</div>
				<div class="clearfix"></div>
			</div>
		</nav>
		<main>
			<time>2012-04-02</time>
			<article><p>L’injection de dépendance (<em>dependency injection</em>) avec Javascript a comme conséquence de ne pouvoir assumer que les fonctionnalités offertes par l’instance reçue seront celles attendues. Dans les langages statiques, l’injection est généralement basée sur une interface, qui assure au module “client” la disponibilité d’un ensemble de fonctionnalités. Le contrat imposé par l’interface est assurément respecté. Dans un langage dynamique comme Javascript, il n’y a rien de tel.</p>

<p>Ce qui laisse deux options aux développeurs Javascript: l’acte de foi ou la validation manuelle de l’objet reçu. J’en parlais dans <a href="http://hypermegatop.calepin.co/experimentations-sur-linjection-de-dependance-avec-nodejs.html">mon dernier billet</a>, j’avais l’impression qu’il manquait quelque chose à ce niveau.</p>

<h3>implement.js</h3>

<p>C’est là qu’entre en scène ma nouvelle librairie offerte en logiciel libre, <a href="https://github.com/PuerkitoBio/implement.js">implement.js</a> (comme vous pouvez le constater, <em>je blog in French, mais je code in English</em>). Elle permet de valider qu’un objet respecte une interface prédéfinie. Ou que les paramètres passés à une fonction sont bel et bien du type attendu. Ce sont là les deux principales fonctionnalités exposées par la librairie.</p>

<p>Je ne reprendrai pas ici <a href="https://github.com/PuerkitoBio/implement.js#readme">le contenu du <em>readme</em> sur GitHub</a>, je vous suggère de le lire et de m’avertir de toute information manquante ou ambigüe. Il s’agit de ma première contribution “significative” au merveilleux monde du logiciel libre, et je le souhaite, pas la dernière! J’ai aussi ajouté une branche dans mon projet expérimental <a href="https://github.com/PuerkitoBio/express-boilerplate">express-boilerplate</a> pour intégrer l’utilisation de <em>implement.js</em>, qui peut servir d’exemple d’utilisation, tout comme <a href="https://github.com/PuerkitoBio/implement.js/tree/master/examples">le répertoire <em>examples</em></a> de <em>implement.js</em>.</p>

<h3>Essayez et participez!</h3>

<p>Les prochaines étapes sont assez simples, je vous invite à essayer la librairie, si vous croyez qu’elle peut être utile dans vos projets. N’hésitez pas à la faire partager avec vos collègues développeurs, et à <a href="https://github.com/PuerkitoBio/implement.js/issues">ouvrir un rapport d’anomalie</a> au besoin. Encore mieux, si vous le pouvez, soumettez un correctif (un <em>pull request</em>). Je prévois ajouter la documentation de l’API avec <a href="http://en.wikipedia.org/wiki/JSDoc">JSDoc</a> sous peu, et possiblement rendre la librairie disponible dans le fureteur.</p>
</article>
		</main>
		<footer>
			<div class="container">
				<div class="left">
					<a href="https://github.com/PuerkitoBio" title="@PuerkitoBio on GitHub">
						<span class="icon-github-circled"></span>
					</a>
				</div>
				<div class="right">
					<a href="https://twitter.com/PuerkitoBio" title="@PuerkitoBio on Twitter">
						<span class="icon-twitter"></span>
					</a>
				</div>
				<div class="middle">
					<h3>Recent posts</h3>
					<ul>
						<li>
							<a href="010-demenagement">Ce blogue a déménagé sur GitHub</a>
						</li>
						<li>
							<a href="009-je-men-vais">Je suis venu te dire que je m&#39;en vais</a>
						</li>
						<li>
							<a href="008-backbone-computed-properties">Propriétés calculées avec Backbone</a>
						</li>
						<li>
							<a href="007-implement-js">implement.js: typage fort et Javascript</a>
						</li>
						<li>
							<a href="006-dependency-injection">Expérimentations sur l&#39;injection de dépendance avec node.js</a>
						</li>
					</ul>
				</div>
				<div class="clearfix"></div>
			</div>
			<div class="container copyright">
				<small>
					built with 
					<a href="https://github.com/PuerkitoBio/trofaf">trofaf</a>
					.
				</small>
				<br />
				<small>© 2013 Martin Angers</small>
			</div>
		</footer>
	</body>
</html>
